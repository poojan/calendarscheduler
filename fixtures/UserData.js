'use strict';

/*
 *  File: UserData.js
 *  Type: DataFixture
 *  Generated by: Mongoose-Fixture (v0.4.1)
 *
 */

// @callback must be returned
// expects (err, object)
// object can be an array of data-documents, or a kwarg['dataFixtures']
// mongoose is the instance of mongoose being used (has schemas)
// conn is the current native mongodb connection (will contain models)
module.exports = function(mongoose, conn, callback){

    // standard callback error
    var error = null;

    // create your data documents using object-literals
    var fixture = [];

    var ObjectId = mongoose.mongo.BSONPure.ObjectID.createFromHexString;
    //var adamId = "53abae3773b31a0000ec912a";
    //console.log(adamId);
    //console.log(ObjectId(adamId));
    //adamId = ObjectId(adamId);
    var adamId = ObjectId("53abae3773b31a0000ec912a"); // Adam
    var congId = ObjectId("53abae3773b31a0000ec9130"); // Cong
    var yoavId = ObjectId("53abae3773b31a0000ec9136"); // Yoav
  /*
    ObjectId("53abae3773b31a0000ec912a"), // Adam
    ObjectId("53abae3773b31a0000ec9130"), // Cong
    ObjectId("53abae3773b31a0000ec9136"), // Yoav
  */
    fixture.push({
      "username":"alice",
      "password":"alice",
      "team": [
        //mongoose.Types.ObjectId("53abae3773b31a0000ec912a"), // Adam
        //mongoose.Types.ObjectId("53abae3773b31a0000ec9130"), // Cong
        //ObjectId("53abae3773b31a0000ec912a"), // Adam
        { _id: adamId },
        { _id: congId }
        //ObjectId("53abae3773b31a0000ec9130"), // Cong
      ]
    });

    fixture.push({
      "username":"bob",
      "password":"bob",
      "team": [
        { _id: adamId },
        { _id: yoavId }
        //ObjectId("53abae3773b31a0000ec912a"), // Adam
        //ObjectId("53abae3773b31a0000ec9136"), // Yoav
      ]
    });

    // mongoose-fixture expects implementor to return
    // the callback passed in context
    return callback(error, fixture);
};
