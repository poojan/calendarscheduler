'use strict';

/*
 *  File: UserSchema.js
 *  Type: Schema
 *  Generated by: Mongoose-Fixture (v0.4.1)
 *
 *
 */

module.exports = function(mongoose, conn){
  var UserSchema = new mongoose.Schema({
    'username': { type: String, required: true, unique: true },
    'password': { type: String, required: true },
    'totalLessonTime': { type: Number },
    'totalOvercomeWeakness': { type: Number },
    'team': [{
      '_teacherId': mongoose.Schema.Types.ObjectId
    }]
  });

  UserSchema.statics.getTeam = function (teacherFilter, callback) {
    var promise = new mongoose.Promise();
    if (callback) { promise.addBack(callback); }

    var fields = '_id name sex dob info image availability';
    //this.find($or: teacherFilter, fields, promise.resolve.bind(promise));
    mongoose.model('Teacher').find({ $or: teacherFilter }, fields, promise.resolve.bind(promise));
    //this.find({}, fields, promise.resolve.bind(promise));
    return promise;
  };


  // mongoose-fixture schemas return this consumable format
  // which allows for you to easily register your models
  // into mongoose/conn
  return { name:'Users', schema: UserSchema };
};
